


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000  ; Timer 1 Base Addr
                                                            ess
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4           ; Timer Command Res
                                                            et Register offset 
                                                            
   10 00000000 00000014 
                       MCR     equ              0x14        ; Timer Mode Reset 
                                                            and Interrupt Offse
                                                            t
   11 00000000 00000018 
                       MR0     equ              0x18        ; Match Register (c
                                                            ounter) offset
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2           ; Reset timer 
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1           ; Run timer
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3           ; Reset timer mode 
                                                            and interrupt
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1           ; Reset timer 0 and
                                                             interrupt
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF        ; Reset all timer i
                                                            nterrupts
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10        ; Interrupt Enable
   22 00000000 00000030 
                       VectAddr
                               equ              0x30        ;
   23 00000000 00000100 
                       VectAddr0



ARM Macro Assembler    Page 2 


                               equ              0x100       ; Vectored Interrup
                                                            t 0
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200       ; Vectored Interrup
                                                            t Control 0
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 
                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   31 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   32 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   33 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   34 00000000         
   35 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   36 00000000                 IMPORT           main
   37 00000000         
   38 00000000         ; (c) Mike Brady, 2014â€“2016.
   39 00000000         
   40 00000000                 EXPORT           start
   41 00000000         start
   42 00000000         ; initialisation code
   43 00000000         
   44 00000000 E59F1070        ldr              r1,=IO1DIR
   45 00000004 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   46 00000008 E5812000        str              r2,[r1]     ;make them outputs
   47 0000000C E59F6068        ldr              r6,=IO1SET
   48 00000010 E5862000        str              r2,[r6]     ;set them to turn t
                                                            he LEDs off
   49 00000014 E59F7064        ldr              r7,=IO1CLR
   50 00000018         ; r1 points to the SET register
   51 00000018         ; r2 points to the CLEAR register
   52 00000018         
   53 00000018 E3A05601        ldr              r5,=0x00100000 ; end when the m
                                                            ask reaches this va
                                                            lue
   54 0000001C E3A03801        ldr              r3,=0x00010000 
                                                            ; start with P1.16.
                                                            
   55 00000020 E5873000        str              r3,[r7]     ; clear the bit -> 
                                                            turn on the LED
   56 00000024         
   57 00000024         
   58 00000024         ; Initialise the VIC



ARM Macro Assembler    Page 3 


   59 00000024 E59F0058        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   60 00000028         
   61 00000028 E59F1058        ldr              r1,=irqhan  ; IRQ Handler
   62 0000002C E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   63 00000030         
   64 00000030 E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   65 00000034 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   66 00000038         
   67 00000038 E3A01010        mov              r1,#Timer0Mask
   68 0000003C E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   69 00000040         
   70 00000040 E3A01000        mov              r1,#0
   71 00000044 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   72 00000048         
   73 00000048         ; Initialise Timer 0
   74 00000048 E59F003C        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   75 0000004C         
   76 0000004C E3A01002        mov              r1,#TimerCommandReset
   77 00000050 E5801004        str              r1,[r0,#TCR]
   78 00000054         
   79 00000054 E3A010FF        mov              r1,#TimerResetAllInterrupts
   80 00000058 E5801000        str              r1,[r0,#IR]
   81 0000005C         
   82 0000005C E59F102C        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   83 00000060 E5801018        str              r1,[r0,#MR0]
   84 00000064         
   85 00000064 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   86 00000068 E5801014        str              r1,[r0,#MCR]
   87 0000006C         
   88 0000006C E3A01001        mov              r1,#TimerCommandRun
   89 00000070 E5801004        str              r1,[r0,#TCR]
   90 00000074         
   91 00000074         
   92 00000074 EAFFFFFE 
                       xloop   b                xloop       ; branch always
   93 00000078         ;main program execution will never drop below the statem
                       ent above.
   94 00000078         
   95 00000078 E0028018 
              E0028014 
              E002801C 
              FFFFF000 
              00000000 
              E0004000 



ARM Macro Assembler    Page 4 


              00011FFF         AREA             InterruptStuff, CODE, READONLY
   96 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
   97 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
   98 00000008         
   99 00000008         ;this is the body of the interrupt handler
  100 00000008         
  101 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  102 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  103 00000008         
  104 00000008 E1530005        cmp              r3, r5      ; if(curPin) > last
                                                            Pin
  105 0000000C BA000001        blt              delay       ;
  106 00000010 E3A03801        ldr              r3,=0x00010000 ; Reset to P1.16
                                                            
  107 00000014 E5873000        str              r3, [r7]
  108 00000018         delay
  109 00000018         ;delay for about a second
  110 00000018 E3A08612        ldr              R8,=0x1200000
  111 0000001C E2588001 
                       dloop   subs             R8,R8,#1
  112 00000020 1AFFFFFD        bne              dloop
  113 00000024         
  114 00000024         skipReset
  115 00000024 E5863000        str              r3,[r6]     ;set the bit -> tur
                                                            n off the current L
                                                            ED
  116 00000028 E1A03083        mov              r3,r3,lsl #1 ;shift up to next 
                                                            bit. P1.16 -> P1.17
                                                             etc.
  117 0000002C E5873000        str              r3,[r7]     ;clear the bit -> t
                                                            urn on the LED
  118 00000030         
  119 00000030         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  120 00000030         ;i.e. we 'acknowledge' the interrupt
  121 00000030         jump
  122 00000030 E59F0014        ldr              r0,=T0
  123 00000034 E3A01001        mov              r1,#TimerResetTimer0Interrupt
  124 00000038 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  125 0000003C         
  126 0000003C         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  127 0000003C E59F000C        ldr              r0,=VIC
  128 00000040 E3A01000        mov              r1,#0
  129 00000044 E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  130 00000048         
  131 00000048 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  132 0000004C         ; and also restoring the CPSR
  133 0000004C         
  134 0000004C E0004000 



ARM Macro Assembler    Page 5 


              FFFFF000         AREA             Subroutines, CODE, READONLY
  135 00000000         
  136 00000000                 AREA             Stuff, DATA, READWRITE
  137 00000000         
  138 00000000                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 35 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
start 00000000

Symbol: start
   Definitions
      At line 41 in file App.s
   Uses
      At line 40 in file App.s
Comment: start used once
xloop 00000074

Symbol: xloop
   Definitions
      At line 92 in file App.s
   Uses
      At line 92 in file App.s
Comment: xloop used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 95 in file App.s
   Uses
      None
Comment: InterruptStuff unused
delay 00000018

Symbol: delay
   Definitions
      At line 108 in file App.s
   Uses
      At line 105 in file App.s
Comment: delay used once
dloop 0000001C

Symbol: dloop
   Definitions
      At line 111 in file App.s
   Uses
      At line 112 in file App.s
Comment: dloop used once
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 96 in file App.s
   Uses
      At line 61 in file App.s
Comment: irqhan used once
jump 00000030

Symbol: jump
   Definitions
      At line 121 in file App.s
   Uses
      None
Comment: jump unused
skipReset 00000024

Symbol: skipReset
   Definitions
      At line 114 in file App.s
   Uses
      None
Comment: skipReset unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Subroutines 00000000

Symbol: Subroutines
   Definitions
      At line 134 in file App.s
   Uses
      None
Comment: Subroutines unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Stuff 00000000

Symbol: Stuff
   Definitions
      At line 136 in file App.s
   Uses
      None
Comment: Stuff unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 49 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 44 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: IO1PIN unused
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 47 in file App.s
Comment: IO1SET used once
IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 80 in file App.s
      At line 124 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 64 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 68 in file App.s
Comment: IntEnable used once
MCR 00000014




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 86 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 83 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 74 in file App.s
      At line 122 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 77 in file App.s
      At line 89 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 64 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 67 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 76 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 88 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 85 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 79 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 123 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 59 in file App.s
      At line 127 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 71 in file App.s
      At line 129 in file App.s

VectAddr0 00000100

Symbol: VectAddr0



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file App.s
   Uses
      At line 62 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 65 in file App.s
Comment: VectCtrl0 used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 36 in file App.s
   Uses
      None
Comment: main unused
1 symbol
372 symbols in table
